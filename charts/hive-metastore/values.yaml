# Default values for hive-metastore.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: sslhep/hive-metastore
  pullPolicy: IfNotPresent
  tag: "3.1.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9083

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# -- Configuration values for the postgresql dependency.
# ref: https://github.com/bitnami/charts/tree/main/bitnami/postgresql
# @default -- see `values.yaml`
postgresql:
  ##
  ## Use the PostgreSQL chart dependency.
  ## Set to false if bringing your own PostgreSQL.
  enabled: true

  ## PostgreSQL global parameters
  global:
    postgresql:
      auth:
        username: hive
        password: hive
        database: metastore

  primary:
    ##
    ## Persistent Volume Storage configuration.
    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes
    persistence:
      ##
      ## Enable PostgreSQL persistence using Persistent Volume Claims.
      enabled: false
      ##
      ## Persistent class
      # storageClass: classname
      ##
      ## Access modes:
      accessModes:
        - ReadWriteOnce

    # The apache hive docker image has a jdbc driver that doesn't use the latest encryption
    # settings. Tell postgres to allow access any way
    extendedConfiguration: |-
      password_encryption=md5

    ## PostgreSQL port
    service:
      ports:
        postgresql: "5432"

# Define hive connections to other services
connections:
  database:
    username: hive
    password: hive
    database: metastore
    host: '{{ .Release.Name }}-postgresql'
    port: 5432

# Update hive-site.xml file
conf:
  hiveSite:
    # Define tmp folder for hdfs since we only have metastore here.
    # If not set, default hive.metastore.warehouse.dir is default to: "hdfs://{{.Release.Name}}-hdfs:8020/user/hive/warehouse"
    hive.metastore.warehouse.dir: "file:///tmp"

# Define object store connections values
objectStore:
  objectStore:
  sslEnabled: false
  endpoint:
  accessKeyId:
  secretAccessKey:
  pathStyle: true
  impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"

# Update log4j properites
log:
  level:
    meta: debug
    hive: info
    datanucleusorg: info
    datanucleus: info
    root: info

# Extra environment variables passed to Hive pods
extraEnvVars: []

# Optionally specify extra list of additional volumeMounts for Hive pods
extraVolumeMounts: []

# Optionally specify extra list of additional volumes for Hive pods
extraVolumes: []
